<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.dong.catdogMapper">



	<!-- 로그인 -->
	<select id="login" parameterType="java.util.Map"
		resultType="java.util.Map">
		Select user_id, name, user_auth
		From member
		Where user_id=#{user_id} and password=#{password}
	</select>

	<!-- 카테고리 리스트 -->
	<select id="mainlist" parameterType="java.util.Map"
		resultType="ProductDTO">
		SELECT
		p.*,
		(SELECT wish_no
		FROM wish w
		WHERE w.user_id = #{user_id} AND w.product_code = p.product_code) AS
		wish_no
		FROM
		product p
		WHERE
		p.product_category = #{product_category}
		ORDER BY
		p.product_regdate DESC
	</select>

	<!-- 리스트에서 제품 선택 -->
	<select id="product_detail" parameterType="java.lang.Integer"
		resultType="BoardDTO">
		select *
		from product
		where product_code = #{product_code}
	</select>

	<insert id="addWish" parameterType="java.util.Map">
		INSERT INTO wish (user_id, product_code)
		VALUES (#{user_id}, #{product_code})
	</insert>

	<delete id="deleteWish" parameterType="java.util.Map">
		DELETE FROM wish
		WHERE user_id = #{user_id} AND product_code = #{product_code}
	</delete>

<!-- 찜 추가 제거 -->
	<!-- <insert id="addWish" parameterType="WishDTO"> insert into wish values 
		(#{user_id}, #{product_code}) </insert> <delete id="deleteWish" parameterType="WishDTO"> 
		delete from wish where user_id=#{user_id} and product_code = #{product_code} 
		</delete> -->

	<!-- 사용자 찜 목록 조회 -->
	<select id="getWish" parameterType="java.util.Map"
		resultType="ProductDTO">
		SELECT
		p.*,
		(SELECT wish_no
		FROM wish w
		WHERE w.user_id = #{user_id} AND w.product_code = p.product_code) AS
		wish_no
		FROM
		product p
		WHERE
		p.product_category = #{product_category}
		ORDER BY
		p.product_regdate DESC
	</select>

	
	
<resultMap id="orderResultMap" type="OrderDTO">
    <result property="orderCode" column="order_code" />
    <result property="userIdFk" column="user_id_fk" />
    <result property="orderedAt" column="ordered_at" />
    <result property="productCost" column="product_cost" />
    <result property="paymentStatus" column="payment_status" />
</resultMap>
	
<select id="getRecentOrders" parameterType="java.util.Map" resultMap="orderResultMap">
    SELECT 
        order_code, 
        user_id_fk, 
        ordered_at, 
        product_cost, 
        payment_status
    FROM orders
    WHERE user_id_fk = #{user_id}
    ORDER BY ordered_at DESC
</select>
	
<select id="getDetailOrder" parameterType="java.util.Map" resultType="OrderDTO">
	SELECT *
	FROM orders
	WHERE order_code = #{order_code}
</select>
	
	
	<!-- 상품 주문 리스트 -->
	<select id="getOrderItems" parameterType="java.lang.Integer" resultType="ProductDTO">
		SELECT
			p.prodcut_code
			p.prodcut_name
			p.thumbnail_img
			oi.order_quantity
			(p.product_price * oi.order_quantity) as productPrice
			oi.order_status
		FROM order_item oi
		JOIN product p on oi.product_code = p.product_code
		WHERE oi.order_code = #{order_code}
	</select>
	
	<!-- 주문 상품 후기 정보 -->
	<select id="getReivew" parameterType="java.lang.Integer" resultType="ReviewDTO">
		SELECT
			r.review_no
			r.product_code
			r.user_id
			r.content
			r.rating
		FROM review r
		WHERE r.product_code in (SELECT product_code
								 FROM order_item
								 WHERE order_code = #{order_code})
	</select>
	
</mapper>